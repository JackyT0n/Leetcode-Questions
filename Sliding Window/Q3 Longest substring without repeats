IDEA: Approach 1 
      We can do a simple sliding window where we keep track of both the front and back of our window 
      We use an array to keep track of the frequency of each character and in the case of a repeat 
      We will adjust our start value until the repeat is removed 
      
class Solution {
public:
int lengthOfLongestSubstring(string s) {
        vector<int> map(128,0);
        int counter=0, begin=0, end=0, d=0; 
        while(end<s.size()){
            if(map[s[end++]]++>0) counter++; 
            while(counter>0) if(map[s[begin++]]-->1) counter--;
            d=max(d, end-begin); //while valid, update d
        }
        return d;
    }
};
